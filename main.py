import telebot
import time
import re
from telebot import types, TeleBot

admin = '5261885864'
admin1 = '642500259'

bot = TeleBot("6670581865:AAFfkWdbZm9z9usHMSz_F9k4zfDYlTPA_iA")

# bot.set_my_commands(telebot.types.BotCommand("/start", "–ù–∞—á–∞—Ç—å"))

requests = {}

@bot.message_handler(commands=["start"])
def start(message):
    kb = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="add_request")
    kb.add(button)
    photo = open('main.jpg', 'rb')
    bot.send_photo(chat_id=message.chat.id, caption='''<b>–ü–æ–ª—É—á–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –≤—ã–ø—É—Å–∫ –∫–∞—Ä—Ç—ã –±–∞–Ω–∫–∞ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞</b>. üá∞üáø

–ó–∞—è–≤–∫–∏ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ —ç—Ç–æ—Ç –∂–µ –¥–µ–Ω—å. –ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç—É –ò–ò–ù (–Ω–∞–ª–æ–≥–æ–≤—ã–π –Ω–æ–º–µ—Ä –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞), —Ç–æ –Ω–∏–∂–µ –µ—Å—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è. 

–ü–æ —Å—Å—ã–ª–∫–µ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é —Å –∑–∞–≥—Ä–∞–Ω–ø–∞—Å–ø–æ—Ä—Ç–æ–º, –æ—Ç–∫—Ä—ã—Ç—å —Å—á–µ—Ç, –¥–∞–ª–µ–µ –∑–∞–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç—É –Ω–∞ –∞–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è. –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É —Å–º–æ–∂–µ—Ç–µ –¢–û–õ–¨–ö–û –í–´ –ª–∏—á–Ω–æ –≤ —Ä—É–∫–∏. 
–í —Å—Ä–µ–¥–Ω–µ–º –¥–æ—Å—Ç–∞–≤–∫–∞ –∑–∞–Ω–∏–º–∞–µ—Ç 3-4 –¥–Ω—è.    

<b>–î–ª—è –∑–∞—è–≤–∫–∏ –ø–æ—Ç—Ä–µ–±—É—é—Ç—Å—è</b> —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:
- –§–ò–û
- –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
- –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
- –ù–æ–º–µ—Ä –ò–ò–ù –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ (–µ—Å–ª–∏ –µ–≥–æ —É –≤–∞—Å –Ω–µ—Ç—É, –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –µ–≥–æ –æ—Ñ–æ—Ä–º–∏—Ç—å @PFL2024)
- –ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã''', reply_markup=kb, parse_mode="html", photo=photo)

@bot.callback_query_handler(func= lambda call: call.data == "add_request")
def get_fio(call):
    requests[call.message.chat.id] = {}
    requests[call.message.chat.id]["delete"] = []
    bot.send_message(call.message.chat.id, '''<b>> –í–≤–µ–¥–∏—Ç–µ –§–ò–û</b>
<i>–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á</i>''', parse_mode="html")
    bot.register_next_step_handler(call.message, get_date)
    
def get_date(message):
    # for msg in requests[message.chat.id]["delete"]:
    #     bot.delete_message(msg, message_id=msg)
    if len(message.text) != 1:
        requests[message.chat.id]["fio"] = message.text
        bot.send_message(message.chat.id, '''<b>> –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è</b>
<i>—á—á.–º–º.–≥–≥–≥–≥</i>''', parse_mode="html")
        requests[message.chat.id]["delete"] = []
        bot.register_next_step_handler(message, get_phone)
    else:
        for msg in requests[message.chat.id]["delete"]:
            bot.delete_message(message.chat.id, message_id=msg)
        msg1 = bot.send_message(message.chat.id, "<u>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –§–ò–û</u>", parse_mode="html")
        msg2 = bot.send_message(message.chat.id, '''<b>> –í–≤–µ–¥–∏—Ç–µ –§–ò</b>
<i>–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á</i>''', parse_mode="html")
        requests[message.chat.id]["delete"] = [msg1.id, msg2.id]
        bot.register_next_step_handler(message, get_date)

def get_phone(message):
    # for msg in requests[message.chat.id]["delete"]:
    #     bot.delete_message(message.chat.id, message_id=msg)
    result = re.match(r'\d\d.\d\d.\d{4}', message.text)
    if bool(result):
        requests[message.chat.id]["date"] = message.text
        bot.send_message(message.chat.id, '''><b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>
7–Ω–æ–º–µ—Ä–±–µ–∑–ø—Ä–æ–±–µ–ª–æ–≤''', parse_mode="html")
        requests[message.chat.id]["delete"] = []
        bot.register_next_step_handler(message, get_inn)
    else:
        for msg in requests[message.chat.id]["delete"]:
            bot.delete_message(message.chat.id, message_id=msg)
        msg1 = bot.send_message(message.chat.id, "<u>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è</u>", parse_mode="html")
        msg2 = bot.send_message(message.chat.id, '''<b>> –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è</b>
<i>—á—á.–º–º.–≥–≥–≥–≥</i>''', parse_mode="html")
        requests[message.chat.id]["delete"] = [msg1.id, msg2.id]
        bot.register_next_step_handler(message, get_phone)

def get_inn(message):
    result = re.match(r'^(\+7|7|8)?[\s\-]?\(?[489][0-9]{2}\)?[\s\-]?[0-9]{3}[\s\-]?[0-9]{2}[\s\-]?[0-9]{2}$', message.text)
    if bool(result):
        requests[message.chat.id]["phone"] = message.text
        bot.send_message(message.chat.id, '''<b>> –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ò–ò–ù</b>''', parse_mode="html")
        requests[message.chat.id]["delete"] = []
        bot.register_next_step_handler(message, get_email)
    else:
        for msg in requests[message.chat.id]["delete"]:
            bot.delete_message(message.chat.id, message_id=msg)
        msg1 = bot.send_message(message.chat.id, "<u>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞</u>", parse_mode="html")
        msg2 = bot.send_message(message.chat.id, '''<b>> –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>
<i>7–Ω–æ–º–µ—Ä–±–µ–∑–ø—Ä–æ–±–µ–ª–æ–≤</i>''', parse_mode="html")
        requests[message.chat.id]["delete"] = [msg1.id, msg2.id]
        bot.register_next_step_handler(message, get_inn)

def get_email(message):
    if len(message.text) == 12 or re.search(r'\w', message.text) == None:
        requests[message.chat.id]["inn"] = message.text
        bot.send_message(message.chat.id, '''<b>> –í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã</b>''', parse_mode="html")
        requests[message.chat.id]["delete"] = []
        bot.register_next_step_handler(message, validate)
    else:
        for msg in requests[message.chat.id]["delete"]:
            bot.delete_message(message.chat.id, message_id=msg)
        msg1 = bot.send_message(message.chat.id, "<u>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ò–ò–ù</u>", parse_mode="html")
        msg2 = bot.send_message(message.chat.id, '''<b>> –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ò–ò–ù</b>''', parse_mode="html")
        requests[message.chat.id]["delete"] = [msg1.id, msg2.id]
        bot.register_next_step_handler(message, get_email)

def validate(message):
    pattern = r"^[-\w\.]+@([-\w]+\.)+[-\w]{2,4}$"

    if re.match(pattern, message.text) is not None:
        requests[message.chat.id]["delete"] = []
        requests[message.chat.id]["email"] = message.text
        kb = types.InlineKeyboardMarkup()
        button1 = types.InlineKeyboardButton(text="–í—Å–µ –≤–µ—Ä–Ω–æ!", callback_data="send_request")
        button2 = types.InlineKeyboardButton(text="–í–≤–µ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ", callback_data="add_request")
        kb.add(button1, button2)
        bot.send_message(message.chat.id, f'''<b>–ü–†–û–í–ï–†–ö–ê</b>

‚ùóÔ∏è–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ä–∞–Ω–µ–µ –¥–∞–Ω–Ω—ã—Ö:

–§–ò–û: {requests[message.chat.id]["fio"]}
–¢–µ–ª–µ—Ñ–æ–Ω: {requests[message.chat.id]["phone"]}
–ò–ò–ù: {requests[message.chat.id]["inn"]}
Email: {requests[message.chat.id]["email"]}

–ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –æ—à–∏–±–∫—É, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í–≤–µ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ"''', reply_markup=kb ,parse_mode="html")
    else:
        for msg in requests[message.chat.id]["delete"]:
            bot.delete_message(message.chat.id, message_id=msg)
        msg1 = bot.send_message(message.chat.id, "<u>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email</u>")
        msg2 = bot.send_message(message.chat.id, '''<b>> –í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã</b>''')
        requests[message.chat.id]["delete"] = [msg1.id, msg2.id]
        bot.register_next_step_handler(message, validate)

@bot.callback_query_handler(func= lambda call: call.data == "send_request")
def send_request(call):
    bot.send_message(admin, f'''<b>–ü—Ä–∏—à–ª–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞!</b>
–§–ò–û: {requests[call.message.chat.id]["fio"]}
–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {requests[call.message.chat.id]["date"]}
–¢–µ–ª–µ—Ñ–æ–Ω: {requests[call.message.chat.id]["phone"]}
–ò–ò–ù: {requests[call.message.chat.id]["inn"]}
Email: {requests[call.message.chat.id]["email"]}''', parse_mode="html")
#     bot.send_message(admin1, f'''<b>–ü—Ä–∏—à–ª–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞!</b>
# –§–ò–û: {requests[call.message.chat.id]["fio"]}
# –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {requests[call.message.chat.id]["date"]}
# –¢–µ–ª–µ—Ñ–æ–Ω: {requests[call.message.chat.id]["phone"]}
# –ò–ò–ù: {requests[call.message.chat.id]["inn"]}
# Email: {requests[call.message.chat.id]["email"]}''', parse_mode="html")
    bot.send_message(call.message.chat.id, f'''<b>–ó–ê–Ø–í–ö–ê –û–¢–ü–†–ê–í–õ–ï–ù–ê</b>

–û–∂–∏–¥–∞–π—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –≤–∏–¥–µ –°–ú–° –Ω–∞ –Ω–æ–º–µ—Ä <b>{requests[call.message.chat.id]["phone"]}</b>
''', parse_mode="html")
    del requests[call.message.chat.id]

bot.polling()

